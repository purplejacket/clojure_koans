;; This is scratch work for http://clojurescriptkoans.com/
;; A first pass at Koans for Clojure

(+ 1 2)
(+ 1 2 3 4 5)
[1 2 3 4 5 6 7]
(= (> 2 1) true)
(> 5 4 3 2 1)
(> 5 3)
(= (- 17 15) (+ 1 1))
(= (+ 3 4) 7 (+ 2 5))
(=  (= 2 "2"))
(= false)
(= (/ 2 1) (not (= 1 nil)))
(= (= 1 1) (= "foo" :foo 'foo))
(= :foo (keyword ['foo]))
(= 'foo (symbol 'foo'))
(= "foo" 'foo')
(not= :fill-in-the-blank 0x5)
(= 0x1A 26)
(= '(1,2,3,4,5) (list 1 2 3 4 5))
(= 1 (first '(1 2 3 4 5)))
(= (list 2 3 4 5) (rest '(1 2 3 4 5)))
(= 1 (first [1 2 3 4 5]))
(= (list) (rest '(100)))
(= list 'list)
(= [:a :b :c :d :e] (cons :a '(:b :c :d :e)))
(= [:a :b :c :d :e]  '(:a :b :c :d :e))
(= '(:a :b :c :d :e) (conj '(:b :c :d :e) :a))
(conj '(:b :c :d :e) :a)
(= ':a (peek '(:a :b :c :d :e)))
(= (list 1) (vec '(1)))
(vector nil nil)
(vec '(1 2))
(conj [111 222] 333)
;; (cons [111 222] 333) -- this raises an exception
(nth [:peanut :butter :and :jelly] 3)
(subvec [:peanut :butter :and :jelly] 1 3) ;;close-open
(count #{1 2 3})
